apply plugin: 'java'
version = '1.0'
libsDirName = 'lib'
sourceCompatibility = 1.8
targetCompatibility = 1.8

task "create-dirs" << {
   sourceSets*.java.srcDirs*.each { it.mkdirs() }
   sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

sourceSets {
    integTest {
        java.srcDir file('src/integTest/java')
        resources.srcDir file('src/integTest/resources')
        compileClasspath += sourceSets.main.runtimeClasspath
        runtimeClasspath = output + compileClasspath
    }
}

task intTest(type: Test) {
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath += sourceSets.integTest.runtimeClasspath
}


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
    }
}

repositories {
        mavenCentral()
}
	
dependencies {
   compile('org.testng:testng:6.8.21:sources')
   compile('org.testng:testng:6.8.21')
   compile('org.mockito:mockito-core:2.0.5-beta')
   compile('org.mockito:mockito-core:2.0.5-beta:sources')
   compile('ch.qos.logback:logback-classic:1.1.3:sources')
   compile('ch.qos.logback:logback-classic:1.1.3')
   compile('ch.qos.logback:logback-classic:1.1.3')
}

test {
    useTestNG {
        excludeGroups 'integrationTests'
        //includeGroups 'unitTests'
    }
}
	
task copyDeps(type: Copy) {
  from configurations.runtime
  into project.projectDir.path+'/lib'
}

compileJava {
	dependsOn ('copyDeps','create-dirs')
}

